{"state":{"access":true,"terms":{"accepted":false,"version":null},"serverUrl":null,"notebooks":[{"path":"anaconda_projects/db/Untitled.ipynb","activeChatKey":null,"previousChatKey":null,"chats":{},"notebookState":{"dataframes":[],"selectedCell":null,"selectedText":{"text":"","cell":{"id":"4f7c13a0-0cb8-4b95-bd5d-d3c414e991e8","source":"import cv2\n\n# Load pre-trained classifiers for face, eyes, and body detection\nface_cap = cv2.CascadeClassifier(\"C:/Users/tatai/AppData/Roaming/Python/Python312/site-packages/cv2/data/haarcascade_frontalface_default.xml\")\neye_cap = cv2.CascadeClassifier(\"C:/Users/tatai/AppData/Roaming/Python/Python312/site-packages/cv2/data/haarcascade_eye.xml\")\nfull_body_cap = cv2.CascadeClassifier(\"C:/Users/tatai/AppData/Roaming/Python/Python312/site-packages/cv2/data/haarcascade_fullbody.xml\")\n\n# Open video capture\nvideo_cap = cv2.VideoCapture(0)\n\nwhile True:\n    ret, video = video_cap.read()\n    if not ret:\n        break\n\n    # Convert to grayscale for detection\n    col = cv2.cvtColor(video, cv2.COLOR_BGR2GRAY)\n\n    # Detect faces\n    faces = face_cap.detectMultiScale(col, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30), flags=cv2.CASCADE_SCALE_IMAGE)\n    for (x, y, w, h) in faces:\n        cv2.rectangle(video, (x, y), (x + w, y + h), (0, 255, 0), 2)  # Draw rectangle for faces\n\n        # Detect eyes within the face region\n        face_region = col[y:y + h, x:x + w]\n        eyes = eye_cap.detectMultiScale(face_region)\n        for (ex, ey, ew, eh) in eyes:\n            cv2.rectangle(video, (x + ex, y + ey), (x + ex + ew, y + ey + eh), (255, 0, 0), 2)  # Draw rectangles for eyes\n\n    # Detect full body\n    bodies = full_body_cap.detectMultiScale(col, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30), flags=cv2.CASCADE_SCALE_IMAGE)\n    for (bx, by, bw, bh) in bodies:\n        cv2.rectangle(video, (bx, by), (bx + bw, by + bh), (0, 0, 255), 2)  # Draw rectangle for bodies\n\n    # Display the resulting frame\n    cv2.imshow(\"MMS_live\", video)\n\n    # Exit the loop when the user presses 'a'\n    if cv2.waitKey(10) == ord('b'):\n        break\n\n# Release the capture object and close all OpenCV windows\nvideo_cap.release()\ncv2.destroyAllWindows()\n"}},"error":null},"homeScreen":{"chatStarters":{"categories":[{"id":"tutorial","label":"Get started","starters":[{"name":"load-volcano-data","label":"Load volcano data from the Smithsonian Institute","instruction":"Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use `pd.read_csv` and show the first 10 rows"},{"name":"plot-fibonacci","label":"Plot the first 100 Fibonacci numbers","instruction":"Plot the first 100 fibonacci numbers"},{"name":"mask-emails","label":"Create a function to mask emails","instruction":"Create a function to mask email addresses, show examples"}]},{"id":"dataframes","label":"Working with dataframes","starters":[{"name":"load-a-dataframe","label":"Load a DataFrame","suggestions":[{"label":"Generate a DataFrame with random data","instruction":"Generate code that creates a DataFrame with random data"},{"label":"Load 2023 NCAA Basketball Results","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/KenPomGamesCleaned.csv' and show the first 10 rows"},{"label":"Load 2023 NCAA Basketball Team Ratings","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/bbwieland/ncaa-projections/main/data/TeamRatings.csv' and show the first 10 rows"},{"label":"(FiveThirtyEight) Which US state has the worst drivers?","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/bad-drivers/bad-drivers.csv' and show the first 10 rows."},{"label":"(FiveThirtyEight) Where do people go to check the weather?","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/weather-check/weather-check.csv' and show the first 10 rows."},{"label":"(FiveThirtyEight) District Urbanization Index 2022","instruction":"Generate a DataFrame from this url - 'https://raw.githubusercontent.com/fivethirtyeight/data/master/district-urbanization-index-2022/urbanization-index-2022.csv' and show the first 10 rows."},{"label":"Load the US Wind Turbine Database from usgs.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/5078f1cb198694274cb708253b0dc210/raw/f90167d071abe328f7f437f3d68dbd5deb6012c8/uswtdb_v5_3_20230113.csv"},{"label":"Load volcano data from the Smithsonian Institute","instruction":"Load 'https://gist.githubusercontent.com/mattkram/9684863843254402942dfede27af2cb7/raw/2590dd8185b833aacf247c0595edbb07a025a6d7/Smithsonian_VOTW_Holocene_Volcanoes.csv' in a code block. Use `pd.read_csv` and show the first 10 rows"},{"label":"Load US population estimates (2010-2019) from census.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/e3dbe9bde709604252f291e1df92ffa7b3bd098f/nst-est2020.csv' and show the first 10 rows."},{"label":"Load US population estimates (2020-2022) from census.gov","instruction":"Generate a DataFrame from this url - 'https://gist.githubusercontent.com/mattkram/d3880a3a23ca36ccf10f22c1f49adb29/raw/f4602d2b9a17eb0d17355897264f4bad80c5528f/NST-EST2022-POPCHG2020_2022.csv' and show the first 10 rows."},{"label":"Load Pittsburgh bike-share rides data","instruction":"Generate a DataFrame from this url - 'https://gist.github.com/mattkram/16ff06942c100c00466ea5022567bdaa/raw/386da24f5ede4e70496cde1dc9e98c9d02bb177e/bikeshare.csv' and show the first 10 rows."}]},{"name":"describe-dataframe","label":"Describe the data in a DataFrame","doNotDisplay":true,"buttonLabel":"Describe Dataframe","contextSelectionRequired":true,"contextType":"describe-dataframe"},{"name":"graph-dataframe","label":"Generate a graph for data in a DataFrame","doNotDisplay":true,"buttonLabel":"Get Code","contextSelectionRequired":true,"contextType":"graph-dataframe"},{"name":"data-cleaning-suggestions","label":"Suggestions for cleaning data","doNotDisplay":true,"buttonLabel":"Generate cleaning suggestions","contextSelectionRequired":true,"suggestionsType":"data-cleaning-suggestions","generateSuggestions":true},{"name":"dataframe-suggestions","label":"More suggestions...","doNotDisplay":true,"buttonLabel":"Generate suggestions","contextSelectionRequired":true,"suggestionsType":"dataframe-suggestions","generateSuggestions":true}]}]},"selectedChatStarter":null},"suggestionState":{"loading":false,"suggestions":null,"dataframe":null,"error":null}}],"path":"anaconda_projects/db/Untitled.ipynb","settings":{"enableDataCollection":false,"open":false,"addCodeToNotebook":null},"user":"tatai","account":{"user":{"id":"7d73c8cf-3f13-4dd1-9550-6dfffcaa7b47","email":"tatairudra39@gmail.com","first_name":"123_Rudranil","last_name":"Goswami","country":null,"state":null,"promotional_content":null,"company":null,"company_size":null,"position":null,"industry":null,"username":null,"created_at":"2025-03-26T21:59:18.103552+00:00","updated_at":null,"partner_id":null,"partner_customer_id":null,"external_id":null,"first_home_visit":true},"profile":{"is_confirmed":true,"is_disabled":false,"is_consented":true},"subscriptions":[],"metadata":{"is_starter_tier":false,"is_pro_tier":false}},"menuOpen":false,"attachContextOpen":false,"summarizedFiles":{},"hidePopups":false},"version":11}